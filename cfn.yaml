AWSTemplateFormatVersion: 2010-09-09
Description: "GitLab related resources"
Parameters:
  MyIp:
    Type: String
    Default: 0.0.0.0/0
  AvailabilityZone:
    Type: String
    Default: "ap-northeast-1a"
  SecurityGroupSuffix:
    Type: String
    Default: gitlabCiWorkerSecurityGroup
Resources:
  GitlabServer:
    Type: AWS::EC2::Instance
    Properties: 
      AvailabilityZone: !Ref AvailabilityZone
      EbsOptimized: true
      IamInstanceProfile: !Ref GitlabServerInstanceProfile
      ImageId: ami-036d0684fc96830ca
      InstanceType: m5a.large
      SecurityGroupIds: 
        - !Ref GitlabServerSecurityGroup
      SubnetId: !Ref PublicSubnet
      BlockDeviceMappings: 
      - DeviceName: "/dev/sda1"
        Ebs: 
          VolumeType: "gp3"
          DeleteOnTermination: "true"
          VolumeSize: "30"
      UserData:
        Fn::Base64: |
          #!/bin/bash
          apt-get update
          apt-get install ca-certificates curl gnupg lsb-release
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
            $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          apt-get update
          apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose
          docker -v
          docker-compose -v

          systemctl disable ssh
          systemctl stop ssh

          git clone https://github.com/athagi/gitlab-shared-runner-example.git
          cd gitlab-shared-runner-example
          PUBLIC_IP="$(curl 'http://169.254.169.254/latest/meta-data/public-ipv4')"
          ls -al
          sed -i -e "s/localhost/${PUBLIC_IP}/g" .env
          docker-compose up -d
  GitlabServerInstanceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
        #- "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
  GitlabServerInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
       - !Ref GitlabServerInstanceRole
  GitlabServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: gitlab-ci-worker
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: !Ref MyIp
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: !GetAtt VPC.CidrBlock
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: !Ref MyIp
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: !GetAtt VPC.CidrBlock
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: !Sub '${GitLabServerElasticIP}/32'
      - IpProtocol: icmp
        FromPort: -1
        ToPort: -1
        CidrIp: !Ref MyIp
  GitLabServerElasticIP:
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: vpc
  GitLabServerElasticIPAssociation:
    Type: AWS::EC2::EIPAssociation
    Properties: 
      AllocationId: !GetAtt GitLabServerElasticIP.AllocationId
      InstanceId: !Ref GitlabServer
  gitlabCiWorkerSecurityGroup: 
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: gitlab-ci-worker
      VpcId: !Ref VPC
      GroupName: !Sub ${AWS::StackName}-${SecurityGroupSuffix}
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        SourceSecurityGroupId: !Ref GitlabServerSecurityGroup
      - IpProtocol: tcp
        FromPort: 2376
        ToPort: 2376
        SourceSecurityGroupId: !Ref GitlabServerSecurityGroup
      - IpProtocol: tcp
        FromPort: 2375
        ToPort: 2375
        SourceSecurityGroupId: !Ref GitlabServerSecurityGroup
      - IpProtocol: icmp
        FromPort: -1
        ToPort: -1
        SourceSecurityGroupId: !Ref GitlabServerSecurityGroup
# this user is used by gitlab-ci config.toml
  gitlabCiUser:
    Type: AWS::IAM::User
    Properties: 
      Policies:
        - PolicyName: gitlab-ci-admin-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'ec2:*'
                Resource: '*'
  gitlabCiUserAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref gitlabCiUser
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 192.168.0.0/16
  InternetGateway: 
    Type: AWS::EC2::InternetGateway
  InternetGatewayAttachment: 
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
  PublicSubnet: 
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Ref AvailabilityZone
      CidrBlock: 192.168.0.0/24
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
  PublicRouteTable: 
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref VPC
  PublicRouteA: 
    Type: AWS::EC2::Route
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway 
  PublicSubnetARouteTableAssociation: 
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable
Outputs:
  VPCID:
    Value: !Ref VPC
  SubnetID:
    Value: !Ref PublicSubnet
  Region:
    Value: !Ref "AWS::Region"
  AvailabilityZone:
    Value: !GetAtt PublicSubnet.AvailabilityZone
  Zone:
    Value: !Join ['', !Split ['ap-northeast-1', !GetAtt PublicSubnet.AvailabilityZone]] # Split delimiter cannot get !Ref value
  GitlabCiUserAccessKey:
    Value: !Ref gitlabCiUserAccessKey
  GitlabCiUserSecretAccessKey:
    Value: !GetAtt gitlabCiUserAccessKey.SecretAccessKey
  SecurityGroupName:
    Value: !Sub ${AWS::StackName}-${SecurityGroupSuffix}
  GitLabServerPublicIP:
    Value: !Ref GitLabServerElasticIP
  GitLabServerInstanceID:
    Value: !Ref GitlabServer
